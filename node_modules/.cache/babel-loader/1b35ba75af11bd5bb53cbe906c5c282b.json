{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement-techis/Desktop/todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport uuidv4 from \"uuid/dist/v4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Local_Storage_Key = \"todoApp.todos\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(Local_Storage_Key));\n    if (setTodos) setTodos(storedTodos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(Local_Storage_Key, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \" \") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodo() {\n    const newTodos = todos.filter(todo => !todo.complete);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearTodo,\n      children: \"Clear Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todos.filter(todo => !todo.complete).length, \" left to do\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/musubimanagement-techis/Desktop/todo/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","uuidv4","Local_Storage_Key","App","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","id","newTodos","todo","find","complete","handleAddTodo","e","name","current","value","prevTodos","handleClearTodo","filter","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,iBAAiB,GAAG,eAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMS,WAAW,GAAGR,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,iBAArB,CAAX,CAApB;AACA,QAAIG,QAAJ,EAAcA,QAAQ,CAACE,WAAD,CAAR;AACf,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACE,OAAb,CAAqBV,iBAArB,EAAwCM,IAAI,CAACK,SAAL,CAAeT,KAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASU,UAAT,CAAoBC,EAApB,EAAwB;AACtB,UAAMC,QAAQ,GAAG,CAAC,GAAGZ,KAAJ,CAAjB;AACA,UAAMa,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAeD,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAApC,CAAb;AACAE,IAAAA,IAAI,CAACE,QAAL,GAAgB,CAACF,IAAI,CAACE,QAAtB;AACAd,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACD;;AAED,WAASI,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,UAAMC,IAAI,GAAGhB,WAAW,CAACiB,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,GAAb,EAAkB;AAClBjB,IAAAA,QAAQ,CAAEoB,SAAD,IAAe;AACtB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAAEV,QAAAA,EAAE,EAAEd,MAAM,EAAZ;AAAgBqB,QAAAA,IAAI,EAAEA,IAAtB;AAA4BH,QAAAA,QAAQ,EAAE;AAAtC,OAAf,CAAP;AACD,KAFO,CAAR;AAGAb,IAAAA,WAAW,CAACiB,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACD;;AAED,WAASE,eAAT,GAA2B;AACzB,UAAMV,QAAQ,GAAGZ,KAAK,CAACuB,MAAN,CAAcV,IAAD,IAAU,CAACA,IAAI,CAACE,QAA7B,CAAjB;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEf,KAAjB;AAAwB,MAAA,UAAU,EAAEU;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,GAAG,EAAER,WAAZ;AAAyB,MAAA,IAAI,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEc,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEM,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,iBAAMtB,KAAK,CAACuB,MAAN,CAAcV,IAAD,IAAU,CAACA,IAAI,CAACE,QAA7B,EAAuCS,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GA1CQzB,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport uuidv4 from \"uuid/dist/v4\";\n\nconst Local_Storage_Key = \"todoApp.todos\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(Local_Storage_Key));\n    if (setTodos) setTodos(storedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(Local_Storage_Key, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \" \") return;\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodo() {\n    const newTodos = todos.filter((todo) => !todo.complete);\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodo}>Clear Complete</button>\n      <div>{todos.filter((todo) => !todo.complete).length} left to do</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}